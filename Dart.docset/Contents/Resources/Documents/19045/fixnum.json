{"id":"fixnum","name":"package:fixnum/fixnum.dart","children":[{"interfaces":[{"name":"intx","refId":"fixnum/intx"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"int64","name":"int64","children":[{"isStatic":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"parseRadix2()","name":"parseRadix","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"s","name":"s","kind":"param"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"radix","name":"radix","kind":"param"}],"kind":"method","comment":"\nParses a [String] in a given [radix] between 2 and 16 and returns an\n[int64].\n","line":"121"},{"isStatic":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"parseInt1()","name":"parseInt","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"s","name":"s","kind":"param"}],"kind":"method","comment":"\nParses a decimal [String] and returns an [int64].\n","line":"146"},{"isStatic":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"parseHex1()","name":"parseHex","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"s","name":"s","kind":"param"}],"kind":"method","comment":"\nParses a hexadecimal [String] and returns an [int64].\n","line":"151"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"_promote1()","name":"_promote","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","isPrivate":true,"line":"243"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"+1()","name":"+","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"257"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"-1()","name":"-","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"267"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"unary-0()","name":"unary-","kind":"method","line":"278"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"*1()","name":"*","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"287"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"%1()","name":"%","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"370"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"~#slash1()","name":"~/","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"382"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"remainder1()","name":"remainder","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"385"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"&1()","name":"&","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"394"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"|1()","name":"|","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"402"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"^1()","name":"^","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"410"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"~0()","name":"~","kind":"method","line":"418"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"<<1()","name":"<<","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"n","name":"n","kind":"param"}],"kind":"method","line":"423"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"id":">>1()","name":">>","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"n","name":"n","kind":"param"}],"kind":"method","line":"447"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"shiftRightUnsigned1()","name":"shiftRightUnsigned","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"n","name":"n","kind":"param"}],"kind":"method","line":"488"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"==1()","name":"==","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","comment":"\nReturns [true] if this [int64] has the same numeric value as the\ngiven object.  The argument may be an [int] or an [intx].\n","line":"517"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"compareTo1()","name":"compareTo","children":[{"ref":{"name":"Comparable","refId":"dart.core/Comparable"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"525"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"<1()","name":"<","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"550"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"<=1()","name":"<=","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"554"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":">1()","name":">","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"558"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":">=1()","name":">=","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"562"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"abs0()","name":"abs","kind":"method","line":"582"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"numberOfLeadingZeros0()","name":"numberOfLeadingZeros","kind":"method","comment":"\nReturns the number of leading zeros in this [int64] as an [int]\nbetween 0 and 64.\n","line":"590"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"numberOfTrailingZeros0()","name":"numberOfTrailingZeros","kind":"method","comment":"\nReturns the number of trailing zeros in this [int64] as an [int]\nbetween 0 and 64.\n","line":"608"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"id":"toBytes0()","name":"toBytes","kind":"method","line":"627"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"toInt0()","name":"toInt","kind":"method","line":"640"},{"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"toInt320()","name":"toInt32","kind":"method","comment":"\nReturns an [int32] containing the low 32 bits of this [int64].\n","line":"664"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"toInt640()","name":"toInt64","kind":"method","comment":"\nReturns [this].\n","line":"671"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toString0()","name":"toString","kind":"method","comment":"\nReturns the value of this [int64] as a decimal [String].\n","line":"677"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toHexString0()","name":"toHexString","kind":"method","line":"705"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toRadixString1()","name":"toRadixString","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"radix","name":"radix","kind":"param"}],"kind":"method","line":"720"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toDebugString0()","name":"toDebugString","kind":"method","line":"747"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"_hexDigit1()","name":"_hexDigit","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"digit","name":"digit","kind":"param"}],"kind":"method","isPrivate":true,"line":"784"},{"returnType":{"name":"void","refId":"void"},"id":"_negate0()","name":"_negate","kind":"method","isPrivate":true,"line":"789"},{"returnType":{"name":"void","refId":"void"},"id":"_setBit1()","name":"_setBit","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"bit","name":"bit","kind":"param"}],"kind":"method","isPrivate":true,"line":"800"},{"returnType":{"name":"void","refId":"void"},"id":"_toShru10()","name":"_toShru1","kind":"method","isPrivate":true,"line":"811"},{"isStatic":true,"returnType":{"name":"int","refId":"dart.core/int"},"id":"_shiftRight2()","name":"_shiftRight","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"x","name":"x","kind":"param"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"n","name":"n","kind":"param"}],"kind":"method","isPrivate":true,"line":"822"},{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"_trialSubtract2()","name":"_trialSubtract","children":[{"ref":{"name":"int64","refId":"fixnum/int64"},"id":"a","name":"a","kind":"param"},{"ref":{"name":"int64","refId":"fixnum/int64"},"id":"b","name":"b","kind":"param"}],"kind":"method","comment":"\nAttempt to subtract b from a if a >= b:\n\nif (a >= b) {\n  a -= b;\n  return true;\n} else {\n  return false;\n}\n","isPrivate":true,"line":"845"},{"isStatic":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"_divModHelper6()","name":"_divModHelper","children":[{"ref":{"name":"int64","refId":"fixnum/int64"},"id":"a","name":"a","kind":"param"},{"ref":{"name":"int64","refId":"fixnum/int64"},"id":"b","name":"b","kind":"param"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"negative","name":"negative","kind":"param","line":"869"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"aIsNegative","name":"aIsNegative","kind":"param","line":"869"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"aIsMinValue","name":"aIsMinValue","kind":"param","line":"869"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"computeRemainder","name":"computeRemainder","kind":"param","line":"870"}],"kind":"method","isPrivate":true,"line":"868"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"_divModByMinValue1()","name":"_divModByMinValue","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"computeRemainder","name":"computeRemainder","kind":"param"}],"kind":"method","isPrivate":true,"line":"908"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"_maskRight1()","name":"_maskRight","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"bits","name":"bits","kind":"param"}],"kind":"method","comment":"\nthis &= ((1L << bits) - 1)\n","isPrivate":true,"line":"927"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"_divModByShift6()","name":"_divModByShift","children":[{"ref":{"name":"int64","refId":"fixnum/int64"},"id":"a","name":"a","kind":"param"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"bpower","name":"bpower","kind":"param"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"negative","name":"negative","kind":"param"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"aIsCopy","name":"aIsCopy","kind":"param"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"aIsNegative","name":"aIsNegative","kind":"param","line":"948"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"computeRemainder","name":"computeRemainder","kind":"param","line":"948"}],"kind":"method","isPrivate":true,"line":"947"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"_powerOfTwo0()","name":"_powerOfTwo","kind":"method","comment":"\nReturn the exact log base 2 of this, or -1 if this is not a power of two.\n","isPrivate":true,"line":"970"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"_divMod3()","name":"_divMod","children":[{"ref":{"name":"int64","refId":"fixnum/int64"},"id":"a","name":"a","kind":"param"},{"ref":{"name":"int64","refId":"fixnum/int64"},"id":"b","name":"b","kind":"param"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"computeRemainder","name":"computeRemainder","kind":"param"}],"kind":"method","isPrivate":true,"line":"1000"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"id":"MAX_VALUE","name":"MAX_VALUE","kind":"property","comment":"\nThe maximum positive value attainable by an [int64], namely\n9,223,372,036,854,775,807.\n","line":"68"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"id":"MIN_VALUE","name":"MIN_VALUE","kind":"property","comment":"\nThe minimum positive value attainable by an [int64], namely\n-9,223,372,036,854,775,808.\n","line":"79"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"id":"ZERO","name":"ZERO","kind":"property","comment":"\nAn [int64] constant equal to 0.\n","line":"89"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"id":"ONE","name":"ONE","kind":"property","comment":"\nAn [int64] constant equal to 1.\n","line":"99"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"id":"TWO","name":"TWO","kind":"property","comment":"\nAn [int64] constant equal to 2.\n","line":"109"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isEven","name":"isEven","kind":"property","line":"566"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isMaxValue","name":"isMaxValue","kind":"property","line":"567"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isMinValue","name":"isMinValue","kind":"property","line":"568"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isNegative","name":"isNegative","kind":"property","line":"569"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isOdd","name":"isOdd","kind":"property","line":"570"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isZero","name":"isZero","kind":"property","line":"571"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"hashCode","name":"hashCode","kind":"property","comment":"\nReturns a hash code based on all the bits of this [int64].\n","line":"576"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"id":"_haveBigInts","name":"_haveBigInts","kind":"property","isPrivate":true,"line":"770"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"_l","name":"_l","kind":"variable","isPrivate":true,"line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"_m","name":"_m","kind":"variable","isPrivate":true,"line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"_h","name":"_h","kind":"variable","isPrivate":true,"line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"_BITS","name":"_BITS","kind":"variable","isPrivate":true,"line":"25"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"_BITS01","name":"_BITS01","kind":"variable","isPrivate":true,"line":"26"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"_BITS2","name":"_BITS2","kind":"variable","isPrivate":true,"line":"27"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"_MASK","name":"_MASK","kind":"variable","isPrivate":true,"line":"28"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"_MASK_2","name":"_MASK_2","kind":"variable","isPrivate":true,"line":"29"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"_SIGN_BIT","name":"_SIGN_BIT","kind":"variable","isPrivate":true,"line":"30"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"_SIGN_BIT_VALUE","name":"_SIGN_BIT_VALUE","kind":"variable","isPrivate":true,"line":"31"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"id":"_MAX_VALUE","name":"_MAX_VALUE","kind":"variable","isPrivate":true,"line":"34"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"id":"_MIN_VALUE","name":"_MIN_VALUE","kind":"variable","isPrivate":true,"line":"35"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"id":"_ZERO","name":"_ZERO","kind":"variable","isPrivate":true,"line":"36"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"id":"_ONE","name":"_ONE","kind":"variable","isPrivate":true,"line":"37"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"id":"_TWO","name":"_TWO","kind":"variable","isPrivate":true,"line":"38"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"isStatic":true,"id":"_minValues","name":"_minValues","kind":"variable","isPrivate":true,"line":"42"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"id":"_remainder","name":"_remainder","kind":"variable","isPrivate":true,"line":"62"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"id":"_haveBigIntsCached","name":"_haveBigIntsCached","kind":"variable","isPrivate":true,"line":"768"},{"id":"int640()","name":"int64","kind":"constructor","comment":"\nConstructs an [int64] equal to 0.\n","line":"160"},{"id":"int64.fromInt1()","name":"int64.fromInt","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"value","name":"value","kind":"param"}],"kind":"constructor","comment":"\nConstructs an [int64] with a given [int] value.\n","line":"165"},{"id":"int64.fromBytes1()","name":"int64.fromBytes","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"id":"bytes","name":"bytes","kind":"param"}],"kind":"constructor","line":"191"},{"id":"int64.fromBytesBigEndian1()","name":"int64.fromBytesBigEndian","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"id":"bytes","name":"bytes","kind":"param"}],"kind":"constructor","line":"211"},{"id":"int64.fromInts2()","name":"int64.fromInts","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"top","name":"top","kind":"param"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"bottom","name":"bottom","kind":"param"}],"kind":"constructor","comment":"\nConstructs an [int64] from a pair of 32-bit integers having the value\n[:((top & 0xffffffff) << 32) | (bottom & 0xffffffff):].\n","line":"235"},{"id":"int64._bits3()","name":"int64._bits","children":[{"initializedField":{"name":"_l","refId":"fixnum/int64/_l"},"ref":{"name":"int","refId":"dart.core/int"},"id":"_l","name":"_l","kind":"param","isPrivate":true},{"initializedField":{"name":"_m","refId":"fixnum/int64/_m"},"ref":{"name":"int","refId":"dart.core/int"},"id":"_m","name":"_m","kind":"param","isPrivate":true},{"initializedField":{"name":"_h","refId":"fixnum/int64/_h"},"ref":{"name":"int","refId":"dart.core/int"},"id":"_h","name":"_h","kind":"param","isPrivate":true}],"kind":"constructor","comment":"\nConstructs an [int64] with a given bitwise representation.  No validation\nis performed.\n","isPrivate":true,"line":"755"},{"id":"int64._copy1()","name":"int64._copy","children":[{"ref":{"name":"int64","refId":"fixnum/int64"},"id":"other","name":"other","kind":"param"}],"kind":"constructor","comment":"\nConstructs an [int64] with the same value as an existing [int64].\n","isPrivate":true,"line":"760"}],"uri":"dart/pkg/fixnum/lib/src/int64.dart","kind":"class","comment":"\nAn immutable 64-bit signed integer, in the range [-2^63, 2^63 - 1].\nArithmetic operations may overflow in order to maintain this range.\n","line":"11"},{"interfaces":[{"name":"intx","refId":"fixnum/intx"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"int32","name":"int32","children":[{"isStatic":true,"returnType":{"name":"int","refId":"dart.core/int"},"id":"_decodeHex1()","name":"_decodeHex","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"c","name":"c","kind":"param"}],"kind":"method","isPrivate":true,"line":"48"},{"isStatic":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"parseRadix2()","name":"parseRadix","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"s","name":"s","kind":"param"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"radix","name":"radix","kind":"param"}],"kind":"method","comment":"\nParses a [String] in a given [radix] between 2 and 16 and returns an\n[int32].\n","line":"65"},{"isStatic":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"parseInt1()","name":"parseInt","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"s","name":"s","kind":"param"}],"kind":"method","comment":"\nParses a decimal [String] and returns an [int32].\n","line":"84"},{"isStatic":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"parseHex1()","name":"parseHex","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"s","name":"s","kind":"param"}],"kind":"method","comment":"\nParses a hexadecimal [String] and returns an [int32].\n","line":"89"},{"isStatic":true,"returnType":{"name":"int","refId":"dart.core/int"},"id":"_bitCount1()","name":"_bitCount","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"i","name":"i","kind":"param"}],"kind":"method","isPrivate":true,"line":"92"},{"isStatic":true,"returnType":{"name":"int","refId":"dart.core/int"},"id":"_numberOfLeadingZeros1()","name":"_numberOfLeadingZeros","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"i","name":"i","kind":"param"}],"kind":"method","isPrivate":true,"line":"119"},{"isStatic":true,"returnType":{"name":"int","refId":"dart.core/int"},"id":"_numberOfTrailingZeros1()","name":"_numberOfTrailingZeros","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"i","name":"i","kind":"param"}],"kind":"method","isPrivate":true,"line":"128"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"_convert1()","name":"_convert","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","isPrivate":true,"line":"143"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"+1()","name":"+","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"169"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"-1()","name":"-","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"176"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"unary-0()","name":"unary-","kind":"method","line":"183"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"*1()","name":"*","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"185"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"%1()","name":"%","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"193"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"~#slash1()","name":"~/","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"201"},{"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"remainder1()","name":"remainder","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"209"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"&1()","name":"&","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"218"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"|1()","name":"|","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"225"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"^1()","name":"^","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"232"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"~0()","name":"~","kind":"method","line":"239"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"<<1()","name":"<<","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"n","name":"n","kind":"param"}],"kind":"method","line":"241"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"id":">>1()","name":">>","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"n","name":"n","kind":"param"}],"kind":"method","line":"249"},{"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"shiftRightUnsigned1()","name":"shiftRightUnsigned","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"n","name":"n","kind":"param"}],"kind":"method","line":"263"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"==1()","name":"==","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","comment":"\nReturns [true] if this [int32] has the same numeric value as the\ngiven object.  The argument may be an [int] or an [intx].\n","line":"281"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"compareTo1()","name":"compareTo","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"291"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"<1()","name":"<","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"298"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"<=1()","name":"<=","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"305"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":">1()","name":">","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"312"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":">=1()","name":">=","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"319"},{"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"abs0()","name":"abs","kind":"method","line":"335"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"numberOfLeadingZeros0()","name":"numberOfLeadingZeros","kind":"method","line":"337"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"numberOfTrailingZeros0()","name":"numberOfTrailingZeros","kind":"method","line":"338"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"id":"toBytes0()","name":"toBytes","kind":"method","line":"340"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"toInt0()","name":"toInt","kind":"method","line":"349"},{"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"toInt320()","name":"toInt32","kind":"method","line":"350"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"toInt640()","name":"toInt64","kind":"method","line":"351"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toString0()","name":"toString","kind":"method","line":"353"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toHexString0()","name":"toHexString","kind":"method","line":"354"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toRadixString1()","name":"toRadixString","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"radix","name":"radix","kind":"param"}],"kind":"method","line":"355"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isEven","name":"isEven","kind":"property","line":"326"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isMaxValue","name":"isMaxValue","kind":"property","line":"327"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isMinValue","name":"isMinValue","kind":"property","line":"328"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isNegative","name":"isNegative","kind":"property","line":"329"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isOdd","name":"isOdd","kind":"property","line":"330"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isZero","name":"isZero","kind":"property","line":"331"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"hashCode","name":"hashCode","kind":"property","line":"333"},{"ref":{"name":"int32","refId":"fixnum/int32"},"isStatic":true,"id":"MAX_VALUE","name":"MAX_VALUE","kind":"variable","line":"17"},{"ref":{"name":"int32","refId":"fixnum/int32"},"isStatic":true,"id":"MIN_VALUE","name":"MIN_VALUE","kind":"variable","line":"23"},{"ref":{"name":"int32","refId":"fixnum/int32"},"isStatic":true,"id":"ZERO","name":"ZERO","kind":"variable","line":"28"},{"ref":{"name":"int32","refId":"fixnum/int32"},"isStatic":true,"id":"ONE","name":"ONE","kind":"variable","line":"33"},{"ref":{"name":"int32","refId":"fixnum/int32"},"isStatic":true,"id":"TWO","name":"TWO","kind":"variable","line":"38"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"_CC_0","name":"_CC_0","kind":"variable","isPrivate":true,"line":"41"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"_CC_9","name":"_CC_9","kind":"variable","isPrivate":true,"line":"42"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"_CC_a","name":"_CC_a","kind":"variable","isPrivate":true,"line":"43"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"_CC_z","name":"_CC_z","kind":"variable","isPrivate":true,"line":"44"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"_CC_A","name":"_CC_A","kind":"variable","isPrivate":true,"line":"45"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"_CC_Z","name":"_CC_Z","kind":"variable","isPrivate":true,"line":"46"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"id":"_i","name":"_i","kind":"variable","isPrivate":true,"line":"131"},{"id":"int32._internal1()","name":"int32._internal","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"i","name":"i","kind":"param"}],"kind":"constructor","isPrivate":true,"line":"133"},{"id":"int32.fromInt1()","name":"int32.fromInt","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"i","name":"i","kind":"param"}],"kind":"constructor","comment":"\nConstructs an [int32] from an [int].  Only the low 32 bits of the input\nare used.\n","line":"139"}],"uri":"dart/pkg/fixnum/lib/src/int32.dart","kind":"class","comment":"\nAn immutable 32-bit signed integer, in the range [-2^31, 2^31 - 1].\nArithmetic operations may overflow in order to maintain this range.\n","line":"11"},{"interfaces":[{"name":"Comparable","refId":"dart.core/Comparable"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"id":"intx","name":"intx","children":[{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"+1()","name":"+","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"13"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"-1()","name":"-","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"14"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"unary-0()","name":"unary-","kind":"method","line":"17"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"*1()","name":"*","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"18"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"%1()","name":"%","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"19"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"~#slash1()","name":"~/","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"21"},{"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"remainder1()","name":"remainder","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"22"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"&1()","name":"&","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"27"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"|1()","name":"|","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"28"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"^1()","name":"^","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"29"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"~0()","name":"~","kind":"method","line":"30"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"<<1()","name":"<<","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"shiftAmount","name":"shiftAmount","kind":"param"}],"kind":"method","line":"31"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"id":">>1()","name":">>","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"shiftAmount","name":"shiftAmount","kind":"param"}],"kind":"method","line":"32"},{"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"shiftRightUnsigned1()","name":"shiftRightUnsigned","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"shiftAmount","name":"shiftAmount","kind":"param"}],"kind":"method","line":"33"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"compareTo1()","name":"compareTo","children":[{"ref":{"name":"Comparable","refId":"dart.core/Comparable"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"36"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"==1()","name":"==","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"37"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"<1()","name":"<","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"38"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"<=1()","name":"<=","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"39"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":">1()","name":">","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"40"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":">=1()","name":">=","children":[{"id":"other","name":"other","kind":"param"}],"kind":"method","line":"41"},{"returnType":{"name":"intx","refId":"fixnum/intx"},"id":"abs0()","name":"abs","kind":"method","line":"53"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"numberOfLeadingZeros0()","name":"numberOfLeadingZeros","kind":"method","comment":"\nReturns the number of leading zeros in this [intx] as an [int]\nbetween 0 and 64.\n","line":"59"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"numberOfTrailingZeros0()","name":"numberOfTrailingZeros","kind":"method","comment":"\nReturns the number of trailing zeros in this [intx] as an [int]\nbetween 0 and 64.\n","line":"65"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"id":"toBytes0()","name":"toBytes","kind":"method","comment":"\nConverts this [intx] to a [List] of [int], starting with the least\nsignificant byte.\n","line":"71"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"toInt0()","name":"toInt","kind":"method","comment":"\nConverts this [intx] to an [int].  On some platforms, inputs with large\nabsolute values (i.e., > 2^52) may lose some of their low bits.\n","line":"77"},{"returnType":{"name":"int32","refId":"fixnum/int32"},"id":"toInt320()","name":"toInt32","kind":"method","comment":"\nConverts an [intx] to 32 bits.  Narrower values are sign extended and\nwider values have their high bits truncated.\n","line":"83"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"id":"toInt640()","name":"toInt64","kind":"method","comment":"\nConverts an [intx] to 64 bits.\n","line":"88"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toString0()","name":"toString","kind":"method","comment":"\nReturns the value of this [intx] as a decimal [String].\n","line":"93"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toHexString0()","name":"toHexString","kind":"method","comment":"\nReturns the value of this [intx] as a hexadecimal [String].\n","line":"98"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toRadixString1()","name":"toRadixString","children":[{"ref":{"name":"int","refId":"dart.core/int"},"id":"radix","name":"radix","kind":"param"}],"kind":"method","comment":"\nReturns the value of this [intx] as a [String] in the given radix.\n[radix] must be an integer between 2 and 16, inclusive.\n","line":"104"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isEven","name":"isEven","kind":"property","line":"44"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isMaxValue","name":"isMaxValue","kind":"property","line":"45"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isMinValue","name":"isMinValue","kind":"property","line":"46"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isNegative","name":"isNegative","kind":"property","line":"47"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isOdd","name":"isOdd","kind":"property","line":"48"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"isZero","name":"isZero","kind":"property","line":"49"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"hashCode","name":"hashCode","kind":"property","line":"51"}],"uri":"dart/pkg/fixnum/lib/src/intx.dart","kind":"class","comment":"\nA fixed-precision integer.\n","line":"10"}],"uri":"dart/pkg/fixnum/lib/fixnum.dart","kind":"library","line":"5"}