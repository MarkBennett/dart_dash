{"id":"logging","name":"package:logging/logging.dart","children":[{"ref":{"name":"Level","refId":"logging/Level"},"id":"_rootLevel","name":"_rootLevel","kind":"variable","isPrivate":true,"line":"22"},{"ref":{"name":"bool","refId":"dart.core/bool"},"id":"hierarchicalLoggingEnabled","name":"hierarchicalLoggingEnabled","kind":"variable","line":"16"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"LogRecord","name":"LogRecord","children":[{"isFinal":true,"ref":{"name":"Level","refId":"logging/Level"},"id":"level","name":"level","kind":"variable","line":"309"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"message","name":"message","kind":"variable","line":"310"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"loggerName","name":"loggerName","kind":"variable","line":"313"},{"isFinal":true,"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"id":"time","name":"time","kind":"variable","line":"316"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"id":"sequenceNumber","name":"sequenceNumber","kind":"variable","line":"319"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"id":"_nextNumber","name":"_nextNumber","kind":"variable","isPrivate":true,"line":"321"},{"ref":{"name":"Exception","refId":"dart.core/Exception"},"id":"exception","name":"exception","kind":"variable","line":"324"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"exceptionText","name":"exceptionText","kind":"variable","line":"327"},{"id":"LogRecord6()","name":"LogRecord","children":[{"initializedField":{"name":"level","refId":"logging/LogRecord/level"},"ref":{"name":"Level","refId":"logging/Level"},"id":"level","name":"level","kind":"param","line":"330"},{"initializedField":{"name":"message","refId":"logging/LogRecord/message"},"ref":{"name":"String","refId":"dart.core/String"},"id":"message","name":"message","kind":"param","line":"330"},{"initializedField":{"name":"loggerName","refId":"logging/LogRecord/loggerName"},"ref":{"name":"String","refId":"dart.core/String"},"id":"loggerName","name":"loggerName","kind":"param","line":"330"},{"isOptional":true,"id":"time","name":"time","kind":"param","line":"331"},{"initializedField":{"name":"exception","refId":"logging/LogRecord/exception"},"ref":{"name":"Exception","refId":"dart.core/Exception"},"isOptional":true,"id":"exception","name":"exception","kind":"param","line":"331"},{"initializedField":{"name":"exceptionText","refId":"logging/LogRecord/exceptionText"},"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"id":"exceptionText","name":"exceptionText","kind":"param","line":"331"}],"kind":"constructor","line":"329"}],"kind":"class","comment":"\nA log entry representation used to propagate information from [Logger] to\nindividual [Handler]s.\n","line":"308"},{"interfaces":[{"name":"Comparable","refId":"dart.core/Comparable","arguments":[{"name":"Level","refId":"logging/Level"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"Level","name":"Level","children":[{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"==1()","name":"==","children":[{"ref":{"name":"Level","refId":"logging/Level"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"293"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"<1()","name":"<","children":[{"ref":{"name":"Level","refId":"logging/Level"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"294"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"<=1()","name":"<=","children":[{"ref":{"name":"Level","refId":"logging/Level"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"295"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":">1()","name":">","children":[{"ref":{"name":"Level","refId":"logging/Level"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"296"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"id":">=1()","name":">=","children":[{"ref":{"name":"Level","refId":"logging/Level"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"297"},{"returnType":{"name":"int","refId":"dart.core/int"},"id":"compareTo1()","name":"compareTo","children":[{"ref":{"name":"Level","refId":"logging/Level"},"id":"other","name":"other","kind":"param"}],"kind":"method","line":"298"},{"returnType":{"name":"String","refId":"dart.core/String"},"id":"toString0()","name":"toString","kind":"method","line":"300"},{"ref":{"name":"int","refId":"dart.core/int"},"id":"hashCode","name":"hashCode","kind":"property","line":"299"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"name","name":"name","kind":"variable","line":"253"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"id":"value","name":"value","kind":"variable","line":"259"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"id":"ALL","name":"ALL","kind":"variable","line":"264"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"id":"OFF","name":"OFF","kind":"variable","line":"267"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"id":"FINEST","name":"FINEST","kind":"variable","line":"270"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"id":"FINER","name":"FINER","kind":"variable","line":"273"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"id":"FINE","name":"FINE","kind":"variable","line":"276"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"id":"CONFIG","name":"CONFIG","kind":"variable","line":"279"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"id":"INFO","name":"INFO","kind":"variable","line":"282"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"id":"WARNING","name":"WARNING","kind":"variable","line":"285"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"id":"SEVERE","name":"SEVERE","kind":"variable","line":"288"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"id":"SHOUT","name":"SHOUT","kind":"variable","line":"291"},{"id":"Level2()","name":"Level","children":[{"initializedField":{"name":"name","refId":"logging/Level/name"},"ref":{"name":"String","refId":"dart.core/String"},"id":"name","name":"name","kind":"param"},{"initializedField":{"name":"value","refId":"logging/Level/value"},"ref":{"name":"int","refId":"dart.core/int"},"id":"value","name":"value","kind":"param"}],"kind":"constructor","line":"261"}],"kind":"class","comment":"\n[Level]s to control logging output. Logging can be enabled to include all\nlevels above certain [Level]. [Level]s are ordered using an integer\nvalue [Level.value]. The predefined [Level] constants below are sorted as\nfollows (in descending order): [Level.SHOUT], [Level.SEVERE],\n[Level.WARNING], [Level.INFO], [Level.CONFIG], [Level.FINE], [Level.FINER],\n[Level.FINEST], and [Level.ALL].\n\nWe recommend using one of the predefined logging levels. If you define your\nown level, make sure you use a value between those used in [Level.ALL] and\n[Level.OFF].\n","line":"250"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"LoggerHandlerList","name":"LoggerHandlerList","children":[{"returnType":{"name":"void","refId":"void"},"id":"add1()","name":"add","children":[{"ref":{"name":"LoggerHandler","refId":"logging/LoggerHandler"},"id":"handler","name":"handler","kind":"param"}],"kind":"method","line":"232"},{"returnType":{"name":"void","refId":"void"},"id":"remove1()","name":"remove","children":[{"ref":{"name":"LoggerHandler","refId":"logging/LoggerHandler"},"id":"handler","name":"handler","kind":"param"}],"kind":"method","line":"233"},{"returnType":{"name":"void","refId":"void"},"id":"clear0()","name":"clear","kind":"method","line":"234"},{"ref":{"name":"Logger","refId":"logging/Logger"},"id":"_logger","name":"_logger","kind":"variable","isPrivate":true,"line":"228"},{"id":"LoggerHandlerList1()","name":"LoggerHandlerList","children":[{"initializedField":{"name":"_logger","refId":"logging/LoggerHandlerList/_logger"},"ref":{"name":"Logger","refId":"logging/Logger"},"id":"_logger","name":"_logger","kind":"param","isPrivate":true}],"kind":"constructor","line":"230"}],"kind":"class","comment":"List of handlers that will be called on a logger event. ","line":"227"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"LoggerEvents","name":"LoggerEvents","children":[{"ref":{"name":"LoggerHandlerList","refId":"logging/LoggerHandlerList"},"id":"record","name":"record","kind":"property","comment":"Event fired when a log record is added to a [Logger]. ","line":"222"},{"isFinal":true,"ref":{"name":"Logger","refId":"logging/Logger"},"id":"_logger","name":"_logger","kind":"variable","isPrivate":true,"line":"217"},{"id":"LoggerEvents1()","name":"LoggerEvents","children":[{"initializedField":{"name":"_logger","refId":"logging/LoggerEvents/_logger"},"ref":{"name":"Logger","refId":"logging/Logger"},"id":"_logger","name":"_logger","kind":"param","isPrivate":true}],"kind":"constructor","line":"219"}],"kind":"class","comment":"Event manager for a [Logger] (holds events that a [Logger] can fire). ","line":"216"},{"returnType":{"name":"void","refId":"void"},"id":"LoggerHandler","name":"LoggerHandler","children":[{"id":"LogRecord","name":"LogRecord","kind":"param"}],"kind":"typedef","comment":"Handler callback to process log entries as they are added to a [Logger]. ","line":"212"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"id":"Logger","name":"Logger","children":[{"isSetter":true,"id":"level=1()","name":"level=","children":[{"id":"value","name":"value","kind":"param"}],"kind":"method","comment":"Override the level for this particular [Logger] and its children. ","line":"94"},{"returnType":{"name":"void","refId":"void"},"id":"_addHandler1()","name":"_addHandler","children":[{"ref":{"name":"LoggerHandler","refId":"logging/LoggerHandler"},"id":"handler","name":"handler","kind":"param"}],"kind":"method","comment":"Adds a handler to listen whenever a log record is added to this logger. ","isPrivate":true,"line":"116"},{"returnType":{"name":"void","refId":"void"},"id":"_removeHandler1()","name":"_removeHandler","children":[{"ref":{"name":"LoggerHandler","refId":"logging/LoggerHandler"},"id":"handler","name":"handler","kind":"param"}],"kind":"method","comment":"Remove a previously added handler. ","isPrivate":true,"line":"128"},{"returnType":{"name":"void","refId":"void"},"id":"_clearHandlers0()","name":"_clearHandlers","kind":"method","comment":"Removes all handlers previously added to this logger. ","isPrivate":true,"line":"139"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"id":"isLoggable1()","name":"isLoggable","children":[{"ref":{"name":"Level","refId":"logging/Level"},"id":"value","name":"value","kind":"param"}],"kind":"method","comment":"Whether a message for [value]'s level is loggable in this logger. ","line":"148"},{"returnType":{"name":"void","refId":"void"},"id":"log2()","name":"log","children":[{"ref":{"name":"Level","refId":"logging/Level"},"id":"logLevel","name":"logLevel","kind":"param"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"message","name":"message","kind":"param"}],"kind":"method","comment":"\nAdds a log record for a [message] at a particular [logLevel] if\n`isLoggable(logLevel)` is true. Use this method to create log entries for\nuser-defined levels. To record a message at a predefined level (e.g.\n[Level.INFO], [Level.WARNING], etc) you can use their specialized methods\ninstead (e.g. [info], [warning], etc).\n","line":"158"},{"returnType":{"name":"void","refId":"void"},"id":"finest1()","name":"finest","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"message","name":"message","kind":"param"}],"kind":"method","comment":"Log message at level [Level.FINEST]. ","line":"174"},{"returnType":{"name":"void","refId":"void"},"id":"finer1()","name":"finer","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"message","name":"message","kind":"param"}],"kind":"method","comment":"Log message at level [Level.FINER]. ","line":"177"},{"returnType":{"name":"void","refId":"void"},"id":"fine1()","name":"fine","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"message","name":"message","kind":"param"}],"kind":"method","comment":"Log message at level [Level.FINE]. ","line":"180"},{"returnType":{"name":"void","refId":"void"},"id":"config1()","name":"config","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"message","name":"message","kind":"param"}],"kind":"method","comment":"Log message at level [Level.CONFIG]. ","line":"183"},{"returnType":{"name":"void","refId":"void"},"id":"info1()","name":"info","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"message","name":"message","kind":"param"}],"kind":"method","comment":"Log message at level [Level.INFO]. ","line":"186"},{"returnType":{"name":"void","refId":"void"},"id":"warning1()","name":"warning","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"message","name":"message","kind":"param"}],"kind":"method","comment":"Log message at level [Level.WARNING]. ","line":"189"},{"returnType":{"name":"void","refId":"void"},"id":"severe1()","name":"severe","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"message","name":"message","kind":"param"}],"kind":"method","comment":"Log message at level [Level.SEVERE]. ","line":"192"},{"returnType":{"name":"void","refId":"void"},"id":"shout1()","name":"shout","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"message","name":"message","kind":"param"}],"kind":"method","comment":"Log message at level [Level.SHOUT]. ","line":"195"},{"returnType":{"name":"void","refId":"void"},"id":"_publish1()","name":"_publish","children":[{"ref":{"name":"LogRecord","refId":"logging/LogRecord"},"id":"record","name":"record","kind":"param"}],"kind":"method","isPrivate":true,"line":"197"},{"ref":{"name":"String","refId":"dart.core/String"},"id":"fullName","name":"fullName","kind":"property","comment":"The full name of this logger, which includes the parent's full name. ","line":"34"},{"ref":{"name":"Level","refId":"logging/Level"},"id":"level","name":"level","kind":"property","comment":"\nEffective level considering the levels established in this logger's parents\n(when [hierarchicalLoggingEnabled] is true).\n","line":"85"},{"ref":{"name":"LoggerEvents","refId":"logging/LoggerEvents"},"id":"on","name":"on","kind":"property","comment":"\nReturns an event manager for this [Logger]. You can listen for log messages\nby adding a [LoggerHandler] to an event from the event manager, for\ninstance:\n   logger.on.record.add((record) { ... });\n","line":"113"},{"isStatic":true,"id":"root","name":"root","kind":"property","comment":"Top-level root [Logger]. ","line":"204"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"id":"name","name":"name","kind":"variable","line":"31"},{"isFinal":true,"ref":{"name":"Logger","refId":"logging/Logger"},"id":"parent","name":"parent","kind":"variable","line":"38"},{"ref":{"name":"Level","refId":"logging/Level"},"id":"_level","name":"_level","kind":"variable","isPrivate":true,"line":"41"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"Logger","refId":"logging/Logger"}]},"id":"children","name":"children","kind":"variable","line":"44"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"LoggerHandler","refId":"logging/LoggerHandler"}]},"id":"_handlers","name":"_handlers","kind":"variable","isPrivate":true,"line":"47"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"Logger","refId":"logging/Logger"}]},"isStatic":true,"id":"_loggers","name":"_loggers","kind":"variable","isPrivate":true,"line":"207"},{"id":"Logger1()","name":"Logger","children":[{"ref":{"name":"String","refId":"dart.core/String"},"id":"name","name":"name","kind":"param"}],"kind":"constructor","comment":"\nSingleton constructor. Calling `new Logger(name)` will return the same\nactual instance whenever it is called with the same string name.\n","line":"53"},{"id":"Logger._internal2()","name":"Logger._internal","children":[{"initializedField":{"name":"name","refId":"logging/Logger/name"},"ref":{"name":"String","refId":"dart.core/String"},"id":"name","name":"name","kind":"param"},{"initializedField":{"name":"parent","refId":"logging/Logger/parent"},"ref":{"name":"Logger","refId":"logging/Logger"},"id":"parent","name":"parent","kind":"param"}],"kind":"constructor","isPrivate":true,"line":"76"}],"kind":"class","comment":"\nUse a [Logger] to log debug messages. [Logger]s are named using a\nhierarchical dot-separated name convention.\n","line":"29"}],"uri":"dart/pkg/logging/lib/logging.dart","kind":"library","comment":"\nProvides APIs for debugging and error logging. This library introduces\nabstractions similar to those used in other languages, such as the Closure JS\nLogger and java.util.logging.Logger.\n","line":"10"}